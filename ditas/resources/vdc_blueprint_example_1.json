{  
   "INTERNAL_STRUCTURE":{  
      "Overview":{  
         "name":"VDC_1",
         "description":"This VDC provides information about the patients of the general hospital of Milan",
         "tags":[  
            {  
               "method_name":"patient-details",
               "tags":[  
                  "Milan",
                  "patients"
               ]
            }
         ]
      },
      "Data_Sources":[  
         {  
            "name":"MySQLPatientDetails",
            "type":"JDBC",
            "parameters":{  
               "jdbc_url":"jdbc:mysql://localhost:3306/sakila?profileSQL=true",
               "driver":"com.mysql.jdbc_5.1.5.jar"
            }
         }
      ],
      "Flow":{  
         "platform":"Node-RED",
         "source_code":[  
            {  
               "id":"dcb2aaf0.9e2e48",
               "type":"tab",
               "label":"CAF",
               "disabled":false,
               "info":""
            },
            {  
               "id":"b590daea.01c548",
               "type":"tab",
               "label":"patient-details",
               "disabled":false,
               "info":""
            },
            {  
               "id":"94cf7fc3.f0bab",
               "type":"subflow",
               "name":"DITAS CAF",
               "info":"",
               "in":[  

               ],
               "out":[  
                  {  
                     "x":854.9999923706055,
                     "y":1064.9998779296875,
                     "wires":[  
                        {  
                           "id":"d7802ea4.e7f43",
                           "port":0
                        }
                     ]
                  }
               ]
            },
            {  
               "id":"b4332de4.7304e",
               "type":"MySQLdatabase",
               "z":"",
               "host":"",
               "port":"3306",
               "db":"ditas_dummy_example",
               "tz":""
            },
            {  
               "id":"dbf13448.4be018",
               "type":"http in",
               "z":"94cf7fc3.f0bab",
               "name":"HTTP request",
               "url":"/CAF/:exposed_method",
               "method":"post",
               "upload":false,
               "swaggerDoc":"",
               "x":104.78118896484375,
               "y":46.164727210998535,
               "wires":[  
                  [  
                     "389ebc6d.6ca324"
                  ]
               ]
            },
            {  
               "id":"d7802ea4.e7f43",
               "type":"switch",
               "z":"94cf7fc3.f0bab",
               "name":"EXPOSED_API.Methods",
               "property":"req.params.exposed_method",
               "propertyType":"msg",
               "rules":[  
                  {  
                     "t":"eq",
                     "v":"patient-details",
                     "vt":"str"
                  },
                  {  
                     "t":"else"
                  }
               ],
               "checkall":"false",
               "repair":false,
               "outputs":2,
               "x":332.7897033691406,
               "y":1258.6193180084229,
               "wires":[  
                  [  

                  ],
                  [  
                     "b099ac96.d4a2b"
                  ]
               ]
            },
            {  
               "id":"389ebc6d.6ca324",
               "type":"switch",
               "z":"94cf7fc3.f0bab",
               "name":"check that purpose exists",
               "property":"$exists(payload.purpose)",
               "propertyType":"jsonata",
               "rules":[  
                  {  
                     "t":"false"
                  },
                  {  
                     "t":"else"
                  }
               ],
               "checkall":"false",
               "outputs":2,
               "x":262.01422119140625,
               "y":208.0056915283203,
               "wires":[  
                  [  
                     "e6ee32cf.073dd"
                  ],
                  [  
                     "cdd1da0e.446448"
                  ]
               ]
            },
            {  
               "id":"e6ee32cf.073dd",
               "type":"function",
               "z":"94cf7fc3.f0bab",
               "name":"error response",
               "func":"msg.payload = \"the body of every HTTP request should contain the purpose of the request\";\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":642.2442855834961,
               "y":281.9261236190796,
               "wires":[  
                  [  
                     "a83625f3.a841a8"
                  ]
               ]
            },
            {  
               "id":"a83625f3.a841a8",
               "type":"http response",
               "z":"94cf7fc3.f0bab",
               "name":"HTTP response",
               "statusCode":"",
               "headers":{  

               },
               "x":713.241569519043,
               "y":169.75292491912842,
               "wires":[  

               ]
            },
            {  
               "id":"cdd1da0e.446448",
               "type":"function",
               "z":"94cf7fc3.f0bab",
               "name":"strore purpose details to msg",
               "func":"msg.purpose = {};\n\nmsg.purpose.value = msg.payload.purpose;\n\nmsg.purpose.type = typeof(msg.payload.purpose);\n\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":311.24436950683594,
               "y":306.9262409210205,
               "wires":[  
                  [  
                     "cd2051d0.45e19"
                  ]
               ]
            },
            {  
               "id":"cd2051d0.45e19",
               "type":"switch",
               "z":"94cf7fc3.f0bab",
               "name":"check that purpose is string",
               "property":"purpose.type",
               "propertyType":"msg",
               "rules":[  
                  {  
                     "t":"neq",
                     "v":"string",
                     "vt":"str"
                  },
                  {  
                     "t":"else"
                  }
               ],
               "checkall":"false",
               "outputs":2,
               "x":300.24436950683594,
               "y":429.65356159210205,
               "wires":[  
                  [  
                     "f483345f.93a2b8"
                  ],
                  [  
                     "f58284f2.3ea558"
                  ]
               ]
            },
            {  
               "id":"f483345f.93a2b8",
               "type":"function",
               "z":"94cf7fc3.f0bab",
               "name":"error response",
               "func":"msg.payload = \"the purpose of the HTTP request should be a string\";\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":626.2443771362305,
               "y":428.4716901779175,
               "wires":[  
                  [  
                     "23ee1013.9669e"
                  ]
               ]
            },
            {  
               "id":"23ee1013.9669e",
               "type":"http response",
               "z":"94cf7fc3.f0bab",
               "name":"HTTP response",
               "statusCode":"",
               "headers":{  

               },
               "x":745.2415542602539,
               "y":335.2984094619751,
               "wires":[  

               ]
            },
            {  
               "id":"df38bb28.9b3118",
               "type":"function",
               "z":"94cf7fc3.f0bab",
               "name":"error response",
               "func":"msg.payload = \"the body of every HTTP request should contain the requester_id of the requester\";\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":647.2443695068359,
               "y":647.4715633392334,
               "wires":[  
                  [  
                     "682582.1f479a8"
                  ]
               ]
            },
            {  
               "id":"682582.1f479a8",
               "type":"http response",
               "z":"94cf7fc3.f0bab",
               "name":"HTTP response",
               "statusCode":"",
               "headers":{  

               },
               "x":870.2415313720703,
               "y":704.298433303833,
               "wires":[  

               ]
            },
            {  
               "id":"804c7937.51c3e8",
               "type":"function",
               "z":"94cf7fc3.f0bab",
               "name":"strore requester_id details to msg",
               "func":"msg.requester_id = {};\n\nmsg.requester_id.value = msg.payload.requester_id;\n\nmsg.requester_id.type = typeof(msg.payload.requester_id);\n\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":229.24436950683594,
               "y":898.471718788147,
               "wires":[  
                  [  
                     "f4b8fb0f.ee5c88"
                  ]
               ]
            },
            {  
               "id":"f4b8fb0f.ee5c88",
               "type":"switch",
               "z":"94cf7fc3.f0bab",
               "name":"check that requester_id is string",
               "property":"requester_id.type",
               "propertyType":"msg",
               "rules":[  
                  {  
                     "t":"neq",
                     "v":"string",
                     "vt":"str"
                  },
                  {  
                     "t":"else"
                  }
               ],
               "checkall":"false",
               "outputs":2,
               "x":274.244384765625,
               "y":1024.2899808883667,
               "wires":[  
                  [  
                     "d72805c0.609648"
                  ],
                  [  
                     "d7802ea4.e7f43"
                  ]
               ]
            },
            {  
               "id":"d72805c0.609648",
               "type":"function",
               "z":"94cf7fc3.f0bab",
               "name":"error response",
               "func":"msg.payload = \"the requester_id of the HTTP request should be a string\";\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":622.244384765625,
               "y":1006.2899599075317,
               "wires":[  
                  [  
                     "15db84f0.a13c5b"
                  ]
               ]
            },
            {  
               "id":"15db84f0.a13c5b",
               "type":"http response",
               "z":"94cf7fc3.f0bab",
               "name":"HTTP response",
               "statusCode":"",
               "headers":{  

               },
               "x":705.2415771484375,
               "y":876.1166486740112,
               "wires":[  

               ]
            },
            {  
               "id":"f58284f2.3ea558",
               "type":"switch",
               "z":"94cf7fc3.f0bab",
               "name":"check that requester_id exists",
               "property":"$exists(payload.requester_id)",
               "propertyType":"jsonata",
               "rules":[  
                  {  
                     "t":"false"
                  },
                  {  
                     "t":"else"
                  }
               ],
               "checkall":"false",
               "outputs":2,
               "x":305.01422119140625,
               "y":630.914794921875,
               "wires":[  
                  [  
                     "df38bb28.9b3118"
                  ],
                  [  
                     "804c7937.51c3e8"
                  ]
               ]
            },
            {  
               "id":"b099ac96.d4a2b",
               "type":"function",
               "z":"94cf7fc3.f0bab",
               "name":"error response",
               "func":"msg.payload = \"the exposed method that you selected is not included in the VDC Blueprint\";\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":769.0142211914062,
               "y":1386.1875,
               "wires":[  
                  [  
                     "258a7eae.34e5d2"
                  ]
               ]
            },
            {  
               "id":"258a7eae.34e5d2",
               "type":"http response",
               "z":"94cf7fc3.f0bab",
               "name":"HTTP response",
               "statusCode":"",
               "headers":{  

               },
               "x":966.0142211914062,
               "y":1491.1875,
               "wires":[  

               ]
            },
            {  
               "id":"c4eb7262.b81b1",
               "type":"link in",
               "z":"b590daea.01c548",
               "name":"patient-details",
               "links":[  
                  "ce536723.34952",
                  "a825fc7c.12f2e"
               ],
               "x":215,
               "y":140,
               "wires":[  
                  [  
                     "2d96815c.dc996e"
                  ]
               ]
            },
            {  
               "id":"61eb9802.2aba78",
               "type":"link out",
               "z":"b590daea.01c548",
               "name":"patient-details",
               "links":[  
                  "731361c1.56e26",
                  "81c2d4d4.58b638"
               ],
               "x":1095,
               "y":140,
               "wires":[  

               ]
            },
            {  
               "id":"cc453a45.f98c38",
               "type":"subflow:94cf7fc3.f0bab",
               "z":"dcb2aaf0.9e2e48",
               "name":"",
               "x":390,
               "y":260,
               "wires":[  
                  [  
                     "a825fc7c.12f2e"
                  ]
               ]
            },
            {  
               "id":"2d96815c.dc996e",
               "type":"function",
               "z":"b590daea.01c548",
               "name":"construct MySQL query",
               "func":"var SSN = msg.payload.attributes.SSN;\n\nmsg.topic = \"select * from patient where socialId  = \"+\"\\\"\"+SSN+\"\\\"\";\n\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":226.2273178100586,
               "y":461.52301597595215,
               "wires":[  
                  [  
                     "311b8ea9.2111b2"
                  ]
               ]
            },
            {  
               "id":"17bbf14f.87066f",
               "type":"function",
               "z":"b590daea.01c548",
               "name":"construct exposed data tuple",
               "func":"msg.payload = msg.payload[0];\n\nreturn msg;",
               "outputs":1,
               "noerr":0,
               "x":920,
               "y":460,
               "wires":[  
                  [  
                     "61eb9802.2aba78"
                  ]
               ]
            },
            {  
               "id":"a825fc7c.12f2e",
               "type":"link out",
               "z":"dcb2aaf0.9e2e48",
               "name":"patient-details",
               "links":[  
                  "c4eb7262.b81b1"
               ],
               "x":695,
               "y":80,
               "wires":[  

               ]
            },
            {  
               "id":"f7d65dc8.9dc8",
               "type":"http response",
               "z":"dcb2aaf0.9e2e48",
               "name":"HTTP response",
               "statusCode":"",
               "headers":{  

               },
               "x":600,
               "y":620,
               "wires":[  

               ]
            },
            {  
               "id":"81c2d4d4.58b638",
               "type":"link in",
               "z":"dcb2aaf0.9e2e48",
               "name":"HTTP response",
               "links":[  
                  "61eb9802.2aba78",
                  "586d4d83.f57924",
                  "9b6c786b.53f138",
                  "c5a80e8.ea8ccf"
               ],
               "x":381.00565338134766,
               "y":617.8977880477905,
               "wires":[  
                  [  
                     "f7d65dc8.9dc8"
                  ]
               ]
            },
            {  
               "id":"311b8ea9.2111b2",
               "type":"mysql",
               "z":"b590daea.01c548",
               "mydb":"b4332de4.7304e",
               "name":"query patient biographical data MySQL database",
               "x":590,
               "y":280,
               "wires":[  
                  [  
                     "17bbf14f.87066f"
                  ]
               ]
            }
         ]
      },
      "Testing_Output_Data":[  
         {  
            "method_name":"patient-details",
            "zip_data":"http://localhost:8080"
         }
      ]
   },
   "DATA_MANAGEMENT":{  
      "functionalProperties":{  
         "tbd":"tbd"
      },
      "methods":[  
         {  
            "name":"patient-details",
            "constraints":{  
               "dataUtility":{  
                  "goals":[  
                     {  
                        "id":"1",
                        "name":"Service available",
                        "weight":"1",
                        "metrics":[  
                           {  
                              "id":"1",
                              "name":"Availability 95-99",
                              "type":"Availability",
                              "properties":[  
                                 {  
                                    "name":"Availability",
                                    "unit":"percentage",
                                    "minimum":95,
                                    "maximum":99
                                 }
                              ]
                           }
                        ]
                     },
                     {  
                        "id":"2",
                        "name":"Fast data process",
                        "weight":"1",
                        "metrics":[  
                           {  
                              "id":"2",
                              "name":"ResponseTime 1",
                              "type":"ResponseTime",
                              "properties":[  
                                 {  
                                    "name":"ResponseTime",
                                    "maximum":1,
                                    "unit":"second"
                                 }
                              ]
                           }
                        ]
                     },
                     {  
                        "id":"3",
                        "name":"Data volume",
                        "weight":"1",
                        "metrics":[  
                           {  
                              "id":"3",
                              "name":"volume 10000",
                              "type":"volume",
                              "properties":[  
                                 {  
                                    "name":"volume",
                                    "value":10000,
                                    "unit":"tuple"
                                 }
                              ]
                           }
                        ]
                     },
                     {  
                        "id":"4",
                        "name":"Temporal validity",
                        "weight":"1",
                        "metrics":[  
                           {  
                              "id":"4",
                              "name":"Timeliness 0.6",
                              "type":"Timeliness",
                              "properties":[  
                                 {  
                                    "name":"Timeliness",
                                    "maximum":0.6,
                                    "unit":"NONE"
                                 }
                              ]
                           }
                        ]
                     },
                     {  
                        "id":"5",
                        "name":"Amount of Data",
                        "weight":"1",
                        "metrics":[  
                           {  
                              "id":"5",
                              "name":"Process completeness 90",
                              "type":"Process completeness",
                              "properties":[  
                                 {  
                                    "name":"Process_completeness",
                                    "minimum":90,
                                    "unit":"percentage"
                                 }
                              ]
                           }
                        ]
                     }
                  ]
               },
               "security":{  
                  "goals":[  
                     {  
                        "id":"1",
                        "name":"Encryption",
                        "metrics":[  
                           {  
                              "id":"1",
                              "name":"Encryption AES 128",
                              "type":"Encryption",
                              "properties":[  
                                 {  
                                    "name":"Algorithm",
                                    "unit":"enum",
                                    "value":"AES"
                                 },
                                 {  
                                    "name":"Keylength",
                                    "unit":"number",
                                    "minimum":128
                                 }
                              ]
                           }
                        ]
                     },
                     {  
                        "id":"2",
                        "name":"Tracing",
                        "metrics":[  
                           {  
                              "id":"2",
                              "name":"Tracing",
                              "type":"Tracing",
                              "properties":[  
                                 {  
                                    "name":"Level",
                                    "unit":"enum",
                                    "value":"datasource"
                                 },
                                 {  
                                    "name":"SampleRate",
                                    "unit":"percentage",
                                    "minimum":99,
                                    "maximum":100
                                 }
                              ]
                           }
                        ]
                     },
                     {  
                        "id":"3",
                        "name":"ACL rolebased readOnly",
                        "metrics":[  
                           {  
                              "id":"3",
                              "name":"ACL rolebased readOnly",
                              "type":"ACL",
                              "properties":[  
                                 {  
                                    "name":"Kind",
                                    "unit":"enum",
                                    "value":"rolebased"
                                 },
                                 {  
                                    "name":"Role",
                                    "unit":"enum",
                                    "value":"readOnly"
                                 }
                              ]
                           }
                        ]
                     },
                     {  
                        "id":"4",
                        "name":"ACL rolebased readNonPersonal",
                        "metrics":[  
                           {  
                              "id":"4",
                              "name":"ACL rolebased readNonPersonal",
                              "type":"ACL",
                              "properties":[  
                                 {  
                                    "name":"Kind",
                                    "unit":"enum",
                                    "value":"rolebased"
                                 },
                                 {  
                                    "name":"Role",
                                    "unit":"enum",
                                    "value":"readNonPersonal"
                                 }
                              ]
                           }
                        ]
                     }
                  ]
               },
               "privacy":{  
                  "goals":[  
                     {  
                        "id":"1",
                        "name":"PurposeControl",
                        "metrics":[  
                           {  
                              "id":"1",
                              "name":"PurposeControl NonCommercial Government",
                              "type":"PurposeControl",
                              "properties":[  
                                 {  
                                    "name":"AllowedPurpose",
                                    "unit":"enum",
                                    "value":"NonCommercial"
                                 },
                                 {  
                                    "name":"AllowedGuarantor",
                                    "unit":"enum",
                                    "value":"Government"
                                 }
                              ]
                           }
                        ]
                     }
                  ]
               }
            }
         }
      ]
   },
   "ABSTRACT_PROPERTIES":{  
      "methods":[  
         {  
            "name":"patient-details",
            "constraints":{  
               "dataUtility":{  
                  "treeStructure":{  
                     "type":"AND",
                     "children":[  
                        {  
                           "type":"OR",
                           "leaves":[  
                              "1",
                              "4"
                           ]
                        },
                        {  
                           "type":"AND",
                           "children":[  
                              {  
                                 "type":"OR",
                                 "leaves":[  
                                    "3",
                                    "5"
                                 ]
                              }
                           ],
                           "leaves":[  
                              "2"
                           ]
                        }
                     ]
                  }
               },
               "security":{  
                  "treeStructure":{  
                     "type":"AND",
                     "children":[  
                        {  
                           "type":"OR",
                           "leaves":[  
                              "1",
                              "2"
                           ]
                        }
                     ],
                     "leaves":[  
                        "3",
                        "4"
                     ]
                  }
               },
               "privacy":{  
                  "treeStructure":{  
                     "type":"OR",
                     "leaves":[  
                        "1"
                     ]
                  }
               }
            }
         }
      ]
   },
   "COOKBOOK_APPENDIX":{  
      "name":"name of the deployment",
      "description":"description of the deployment",
      "infrastructure":[  
         {  
            "name":"...",
            "description":"...",
            "type":"cloud",
            "on-line":true,
            "api_endpoint":"api url",
            "api_type":"cloudsigma",
            "keypair_id":"keypair_uuid",
            "resources":[  
               {  
                  "name":"unique_name_1",
                  "type":"vm",
                  "cpus":"8",
                  "ram":"4096",
                  "disk":"512000000",
                  "generate_ssh_keys":false,
                  "ssh_keys_id":"uuid",
                  "role":"type of role, kubernate master, etc...",
                  "baseimage":"optional parameter to indicate OS type"
               },
               {  
                  "name":"...",
                  "description":"...",
                  "type":"edge",
                  "on-line":false,
                  "generate_ssh_keys":true,
                  "role":"type of rolo...",
                  "arch":"processor architecture",
                  "os":"OS type"
               }
            ]
         }
      ],
      "provision":{  
         "provisioner":"chef/ansible/puppet...",
         "provisioner_src":"http://recipes_manifests_playbooks.zip",
         "components":[  

         ]
      }
   },
   "EXPOSED_API":{  
      "Methods":[  
         {  
            "name":"patient-details",
            "description":"Given the SSN returns all the details of the patient",
            "requestBody_schema":{  
               "type":"object",
               "properties":{  
                  "purpose":{  
                     "type":"string"
                  },
                  "requester_id":{  
                     "type":"string"
                  },
                  "attributes":{  
                     "type":"object",
                     "properties":{  
                        "SSN":{  
                           "type":"string"
                        }
                     },
                     "required":[  
                        "SSN"
                     ],
                     "additionalProperties":false
                  }
               },
               "required":[  
                  "purpose",
                  "requester_id",
                  "attributes"
               ],
               "additionalProperties":false
            },
            "output_schema":{  
               "type":"object",
               "properties":{  
                  "addressCity":{  
                     "type":"string"
                  },
                  "addressRoad":{  
                     "type":"string"
                  },
                  "addressRoadNumber":{  
                     "type":"integer"
                  },
                  "birthCity":{  
                     "type":"string"
                  },
                  "nationality":{  
                     "type":"string"
                  },
                  "job":{  
                     "type":"string"
                  },
                  "schoolYears":{  
                     "type":"number"
                  },
                  "birthDate":{  
                     "type":"string",
                     "format":"date-time"
                  },
                  "gender":{  
                     "enum":[  
                        "M",
                        "F"
                     ]
                  },
                  "name":{  
                     "type":"string"
                  },
                  "patientId":{  
                     "type":"string"
                  },
                  "socialId":{  
                     "type":"string"
                  },
                  "surname":{  
                     "type":"string"
                  }
               },
               "required":[  
                  "birthDate",
                  "gender",
                  "name",
                  "patientId",
                  "socialId",
                  "surname"
               ],
               "additionalProperties":false
            },
            "data_sources":[  
               "MySQLPatientDetails"
            ]
         }
      ],
      "RESTful_API":{  
         "openapi":"3.0.1",
         "info":{  
            "title":"CAF API",
            "version":"0.0.1"
         },
         "servers":[  
            {  
               "description":"CAF server",
               "url":"http://localhost:1880/CAF"
            }
         ],
         "paths":{  
            "/patient-details":{  
               "post":{  
                  "tags":[  
                     "patient biographical data"
                  ],
                  "requestBody":{  
                     "content":{  
                        "application/json":{  

                        }
                     }
                  },
                  "responses":{  
                     "200":{  
                        "description":"successful HTTP request"
                     }
                  }
               }
            }
         }
      }
   }
}